// <auto-generated />
using System;
using Kulku.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kulku.Persistence.Pgsql.Migrations.AppDb
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kulku.Domain.Projects.Keyword", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<bool>("Display")
                        .HasColumnType("boolean");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("ProficiencyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProficiencyId");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.KeywordTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<Guid>("KeywordId")
                        .HasColumnType("uuid");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("KeywordId", "Language")
                        .IsUnique();

                    b.ToTable("KeywordTranslations");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.Proficiency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("Scale")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Proficiencies");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.ProficiencyTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("ProficiencyId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProficiencyId", "Language")
                        .IsUnique();

                    b.ToTable("ProficiencyTranslations");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.ProjectKeyword", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("KeywordId")
                        .HasColumnType("uuid");

                    b.HasKey("ProjectId", "KeywordId");

                    b.HasIndex("KeywordId");

                    b.ToTable("ProjectKeyword");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.ProjectTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId", "Language")
                        .IsUnique();

                    b.ToTable("ProjectTranslations");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.Keyword", b =>
                {
                    b.HasOne("Kulku.Domain.Projects.Proficiency", "Proficiency")
                        .WithMany("Keywords")
                        .HasForeignKey("ProficiencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proficiency");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.KeywordTranslation", b =>
                {
                    b.HasOne("Kulku.Domain.Projects.Keyword", "Keyword")
                        .WithMany("Translations")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Keyword");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.ProficiencyTranslation", b =>
                {
                    b.HasOne("Kulku.Domain.Projects.Proficiency", "Proficiency")
                        .WithMany("Translations")
                        .HasForeignKey("ProficiencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proficiency");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.ProjectKeyword", b =>
                {
                    b.HasOne("Kulku.Domain.Projects.Keyword", "Keyword")
                        .WithMany("ProjectKeywords")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kulku.Domain.Projects.Project", "Project")
                        .WithMany("Keywords")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Keyword");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.ProjectTranslation", b =>
                {
                    b.HasOne("Kulku.Domain.Projects.Project", "Project")
                        .WithMany("Translations")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.Keyword", b =>
                {
                    b.Navigation("ProjectKeywords");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.Proficiency", b =>
                {
                    b.Navigation("Keywords");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Kulku.Domain.Projects.Project", b =>
                {
                    b.Navigation("Keywords");

                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
